<html>
  <head>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.0"></script>
    <style type="text/css">
      .container-kanjis {
        font-size: 30px;
      }

      .selected {
        font-weight: bold;
        background: #35818e;
        color: white;
        border-radius: 5px;
      }

      .relation-selected > div {
        background: red;
        color: white;
        border-radius: 5px;
        margin: 1px;
      }

      .kanji-header {
        margin-bottom: 10px;
        position: fixed;
        background: white;
        z-index: 100;
        top: 0px;
        width: 100%;
        left: 197px;
      }
    </style>
  </head>
  <body>
    <div class="container app" style="margin-top: 25px;">
      <div class="row">
        <div class="col-sm-12">
          <div class="kanji-header">
            Total of [[ total_kanjis ]] kanji(s) learned |
            <span>
              <a v-if="!edit.active" href="javascript:;" class="fa fa-pencil" @click="toggleEdit"></a>
              <a v-if="edit.active" href="javascript:;" class="fa fa-times" @click="toggleEdit"></a>
            </span>
          </div>
          <div class="panel" style="margin-top: 25px;">
            <div class="panel-body">
              {#<div class="form-group">
                <div class="input-group">
                  <input v-model="form.new_kanji" type="text" class="form-control">
                  <div class="input-group-append">
                    <button class="btn btn-primary" @click="add">Add</button>
                  </div>
                </div>
              </div>#}
              <div class="row">
                <div class="col-sm-6" style="padding-bottom: 50px;">
                  <div class="container-kanjis row">
                    <div v-for="kanji in kanjis" class="col-sm-1" style="padding: 0px; text-align: center;" :class="{'relation-selected': !!edit.relations[kanji.symbol],selected: selected_kanji == kanji}">
                      <div @click="select(kanji)">[[ kanji.symbol ]]</div>
                      <div>
                        <span v-for="kanj in kanji.relations"></span>
                      </div>
                    </div>
                  </div>
                </div>
                <div class="col-sm-5" v-if="selected_kanji" style="position: fixed; right: 80px;">
                  <div v-if="edit.active">
                    <button class="btn btn-primary" @click="relate" v-if="!edit.is_relating">Relate</button>
                    <button class="btn btn-primary" @click="saveRelations" v-if="edit.is_relating">Save</button>
                    <button class="btn btn-default" @click="relate" v-if="edit.is_relating">Cancel</button>
                  </div>
                  <div style="font-size: 200px; text-align: center;">
                    [[ selected_kanji.symbol ]]
                  </div>
                  <div style="text-align: center; padding: 0 100px;" v-if="show_story">[[ selected_kanji.story ]]</div>
                  <div v-if="!!selected_kanji.story && !show_story" @click="show_story = true" style="text-align: center;">
                    <a href="javascript:;">
                      Show story
                    </a>
                  </div>
                  <div style="position:absolute;"></div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  <script type="text/javascript">
    var apis = function(method, url, params) {
      params = params ? params : {};

      return window.fetch('/apis/remi' + url, {
        method: method,
        body: method != 'GET' ? JSON.stringify(params) : null,
        headers: {
          'Content-Type': 'application/json'
        }
      }).then(res => res.json()).then(res => res.data ? res.data : null);
    };

    document.onkeydown = (e) => {
      app.keyCheck(e.key);
    };

    var app = new Vue({
      el: '.app',
      delimiters: ['[[', ']]'],
      data: {
        kanjis: [],
        total_kanjis: 0,
        selected_kanji: null,
        show_story: false,
        edit: {
          active: false,
          is_relating: false,
          relations: {}
        },
        form: {
          new_kanji: ''
        }
      },
      methods: {
        toggleEdit: function() {
          this.edit.active = !this.edit.active;
        },
        keyCheck: function(key) {
          if (this.edit.active)
            return;

          if (!this.selected_kanji)
            return;

          if (key == 'Enter') {
            this.show_story = true;
            return;
          }

          var num = {
            ArrowLeft: -1,
            ArrowRight: 1,
            ArrowUp: -12,
            ArrowDown: 12
          }[key];

          if (!num)
            return;

          var current = 0;

          for (var i in this.kanjis)
            if (this.kanjis[i].symbol == this.selected_kanji.symbol)
              current = parseInt(i);

          if (!this.kanjis[current + num]) {
            return;
          }

          this.select(this.kanjis[current + num]);
        },
        refresh: function() {
          this.form.new_kanji = '';

          return apis('GET', '/kanjis').then(res => {
            // this.kanjis = res;

            this.total_kanjis = 0;
            for (var i in res) {
              this.kanjis.push(res[i]);
              this.total_kanjis++;
            }
          });
        },
        add: function() {
          apis('POST', '/kanjis', {
            kanji: this.form.new_kanji
          }).then((kanji) => {
            this.refresh().then(() => {
              this.select(kanji);
            });
          })
        },
        relate: function() {
          this.edit.is_relating = !this.edit.is_relating;

          if (!this.edit.is_relating) {
            this.edit.relations = {};
            return;
          }

          for (var i in this.selected_kanji.relations) {
            this.edit.relations[this.selected_kanji.relations[i]] = true;
          }
        },
        saveRelations: function() {
          var relations = [];

          for (var symbol in this.edit.relations)
            relations.push(symbol);

          return apis('POST', '/kanjis/' + this.selected_kanji.symbol, {
            relations: relations
          }).then(() => {
            this.relate();
          });
        },
        select: function(kanji) {
          if (this.edit.is_relating)
            return this.relationSelect(kanji);

          this.show_story = false;
          this.selected_kanji = kanji;
        },
        relationSelect: function(kanji) {
          if (kanji.symbol == this.selected_kanji.symbol)
            return;

          if (this.edit.relations[kanji.symbol]) {
            delete this.edit.relations[kanji.symbol];
            this.$forceUpdate();
            return;
          }

          this.edit.relations[kanji.symbol] = true;
          this.$forceUpdate();
        }
      }
    });

    app.refresh();
  </script>
  </body>
</html>